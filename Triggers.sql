--TRIGGER #1
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TRIGGER trg_NewEmployee
   ON  EMPLOYEES
   AFTER INSERT
AS 
BEGIN
	DECLARE @First_name varchar(8000); 
	SELECT @First_name = newemp.FIRST_NAME from inserted newemp;
	DECLARE @lastname varchar(8000); 
	SELECT @lastname = newemp.LAST_NAME from inserted newemp;
	DECLARE @salary int; 
	SELECT @salary = newemp.SALARY from inserted newemp;
	PRINT ' Added new employee ' + @First_name + ' ' + @lastname + '.' + CHAR(13)+CHAR(10)

END
GO

----------------------------------tests
--USE RESTAURANT;

--INSERT EMPLOYEES(FIRST_NAME, LAST_NAME, GENDER, AGE, OCCUPATION_ID, SALARY, EXPERIENCE_IN_YEARS)
--VALUES( 'Daniel', 'Hernandez', 1, 27, 6, 900, 7)

--INSERT EMPLOYEES(FIRST_NAME, LAST_NAME, GENDER, AGE, OCCUPATION_ID, SALARY, EXPERIENCE_IN_YEARS)
--VALUES( 'Georgi', 'Georgiev', 1, 22, 8, 2000, 1)

--INSERT EMPLOYEES(FIRST_NAME, LAST_NAME, GENDER, AGE, OCCUPATION_ID, SALARY, EXPERIENCE_IN_YEARS)
--VALUES( 'Nikolay', 'Ivanov', 1, 35, 9, 2200, 15)



--TRIGGER #2
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE TRIGGER tr_UpdateEpm 
   ON  EMPLOYEES
   AFTER INSERT, UPDATE
AS 
BEGIN
	
	SET NOCOUNT ON;

	DECLARE @ID INT
	SET @ID = (SELECT ID FROM inserted)


	UPDATE EMPLOYEES
	SET EMPLOYEES.LAST_UPDATED = GETDATE()
	WHERE ID = @ID


END
GO
--TRIGGER #3

USE [RESTAURANT]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TRIGGER [dbo].[TRG_ADD_PRODUCT]
   ON  [dbo].[PRODUCTS_IN_ORDERS]
   INSTEAD OF INSERT
AS 
BEGIN

    DECLARE @PID INT
    DECLARE @OID INT

    SELECT @PID = O.PRODUCT_ID FROM inserted O
    SELECT @OID = O.ORDER_ID FROM inserted O

    IF EXISTS (SELECT 1 FROM PRODUCTS_IN_ORDERS
          WHERE @PID = PRODUCT_ID AND @OID = ORDER_ID) 
          BEGIN
          UPDATE PRODUCTS_IN_ORDERS 
          SET AMOUNT = AMOUNT + 1
          WHERE PRODUCT_ID = @PID AND ORDER_ID = @OID
          END
    ELSE
        BEGIN
		DECLARE @AM INT
		SELECT @AM = O.AMOUNT FROM inserted O
        INSERT PRODUCTS_IN_ORDERS(PRODUCT_ID, ORDER_ID, AMOUNT)
                VALUES(@PID, @OID, @AM)
        END

END
